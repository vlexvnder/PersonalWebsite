{"version":3,"sources":["api/backend.js","components/Explanation.js","components/Meaning.js","components/Suggestion.js","components/Hashtags.js","components/App.js","index.js"],"names":["axios","create","baseURL","window","location","href","Explanation","props","state","card","Transition","Group","animation","duration","this","className","nextProps","Component","Meaning","onButtonClick","e","target","innerHTML","toLowerCase","setState","Fragment","Button","basic","color","content","onClick","Suggestion","positiveOpen","negativeOpen","Modal","trigger","negative","onOpen","open","Header","Content","data","map","sentence","index","posTopics","length","Popup","key","text","topic","posSuggested","Actions","Or","positive","negTopics","negSuggested","Hashtags","hashtags","hashtag","App","editorState","EditorState","createEmpty","topicData","findWithRegex","regex","contentBlock","callback","matchArr","start","getText","exec","onTextAreaChange","a","getCurrentContent","getPlainText","endsWith","backend","post","response","sentences","compositeData","i","x","aspects","sentiment","push","opinion","parseInt","relations","ref","split","slice","opinions","get","replace","word","RegExp","strategy","component","style","backgroundColor","children","join","scores","Math","round","neutral","holisticResponse","top_tags","spanHighlight","CompositeDecorator","set","decorator","b","onChange","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.af186d6b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: window.location.href\r\n});","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport { Transition } from 'semantic-ui-react';\r\n\r\nclass Explanation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { card: '' }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        return {\r\n            card: nextProps.card,\r\n        };\r\n    }       \r\n\r\n    render() { \r\n        return (\r\n            <Transition.Group animation=\"fade down\" duration=\"500\">\r\n                {this.state.card === 'positive' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Positive\r\n                        </div>\r\n                        <p>Positive words are bright and optimistic. Positivity is determined by an Azure Machine Learning Algorithm and the SenticNet 5 database. </p>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'mixed' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Mixed\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'negative' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Negative\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'neutral' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Neutral\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Transition.Group>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Explanation;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport Explanation from './Explanation';\r\n\r\nclass Meaning extends Component {\r\n    state = { card: false };\r\n\r\n    onButtonClick = e => {\r\n        if (this.state.card === e.target.innerHTML.toLowerCase()) {\r\n            this.setState({ card: '' })\r\n        } else {\r\n            this.setState({ card: e.target.innerHTML.toLowerCase() });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"ui text center aligned container\">\r\n                    <Button basic color=\"green\" content=\"Positive\" onClick={this.onButtonClick} />\r\n                    <Button basic color=\"yellow\" content=\"Mixed\" onClick={this.onButtonClick} />\r\n                    <Button basic color=\"red\" content=\"Negative\" onClick={this.onButtonClick} />\r\n                    <Button basic content=\"Neutral\" onClick={this.onButtonClick} />\r\n                </div>\r\n                <Explanation card={this.state.card} />\r\n            </ React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Meaning;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport { Button, Modal, Popup } from 'semantic-ui-react'\r\n\r\nclass Suggestion extends Component {\r\n    state = { positiveOpen: false, negativeOpen: false };\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"ui text center aligned container\">\r\n                <Button.Group>\r\n                    <Modal trigger={<Button negative>Make it negative!</Button>} onOpen={() => {this.setState({ negativeOpen: true })}} open={this.state.negativeOpen}>\r\n                        <Modal.Header>Make it negative!</Modal.Header>\r\n                        <Modal.Content>\r\n                            <h4>These are some of the most positive sentences. In order to make \r\n                                these sentences negative you may want to change these sentences. \r\n                                You can click on a sentence to recieve feedback and additional \r\n                                information on how to make it negative.</h4>\r\n                            {this.props.data.map((sentence, index) => {\r\n                                if (sentence.posTopics.length > 0) {\r\n                                    return (\r\n                                        <Popup key={index} trigger={<p>{sentence.sentence.text}</p>}>\r\n                                            <div className=\"topics\">\r\n                                                <h4>Positive Topics:</h4>\r\n                                                {sentence.posTopics.map((topic, index) => {\r\n                                                    return <p key={index}>{topic}</p>;\r\n                                                })}\r\n                                            </div>\r\n                                            <h4>Suggested Replacement Sentence:</h4>\r\n                                            <p>{sentence.posSuggested}</p>\r\n                                        </Popup>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                            <Button color='red' onClick={() => {this.setState({ negativeOpen: false })}}>Close</Button>\r\n                        </Modal.Actions>\r\n                    </Modal>\r\n                    <Button.Or />\r\n                    <Modal trigger={<Button positive>Make it positive!</Button>} onOpen={() => {this.setState({ positiveOpen: true })}} open={this.state.positiveOpen}>\r\n                        <Modal.Header>Make it positive!</Modal.Header>\r\n                        <Modal.Content>\r\n                            <h4>These are some of the most negative sentences. In order to make \r\n                                these sentences positive you may want to change these sentences. \r\n                                You can click on a sentence to recieve feedback and additional \r\n                                information on how to make it positive.</h4>\r\n                            {this.props.data.map((sentence, index) => {\r\n                                if (sentence.negTopics.length > 0) {\r\n                                    return (\r\n                                        <Popup key={index} trigger={<p>{sentence.sentence.text}</p>}>\r\n                                            <div className=\"topics\">\r\n                                                <h4>Negative Topics:</h4>\r\n                                                {sentence.negTopics.map((topic, index) => {\r\n                                                    return <p key={index}>{topic}</p>;\r\n                                                })}\r\n                                            </div>\r\n                                            <h4>Suggested Replacement Sentence:</h4>\r\n                                            <p>{sentence.negSuggested}</p>\r\n                                        </Popup>\r\n                                    )\r\n                                }\r\n                            })}\r\n\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                            <Button color='red' onClick={() => {this.setState({ positiveOpen: false })}}>Close</Button>\r\n                        </Modal.Actions>\r\n                    </Modal>\r\n                </Button.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Suggestion;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nclass Hashtags extends Component {\r\n    render() { \r\n        const hashtags = this.props.hashtags.map((hashtag, index) => {\r\n            return <a key={index}>{hashtag} </a>;\r\n        })\r\n        return (\r\n            <div className=\"hashtags ui text center aligned container\">\r\n                {hashtags}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Hashtags;","import React, { Component } from 'react';\r\nimport {Editor, EditorState, CompositeDecorator} from 'draft-js';\r\nimport { Popup } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport backend from '../api/backend';\r\n\r\nimport './App.css';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Meaning from './Meaning';\r\nimport Suggestion from './Suggestion';\r\nimport Hashtags from './Hashtags';\r\n\r\nclass App extends Component {\r\n    state = { editorState: EditorState.createEmpty(), hashtags: ['Start writing! Key emotions will appear here.'], topicData: [] };\r\n\r\n    findWithRegex = (regex, contentBlock, callback) => {\r\n        const text = contentBlock.getText();\r\n        let matchArr, start, end;\r\n        while ((matchArr = regex.exec(text)) !== null) {\r\n          start = matchArr.index;\r\n          end = start + matchArr[0].length;\r\n          callback(start, end);\r\n        }\r\n    };\r\n\r\n    sortPositiveSentences(a, b) {\r\n        if (a.scores.positive > b.scores.positive) {\r\n            return -1;\r\n        } \r\n        if (a.scores.positive < b.scores.positive) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    sortNegativeSentences(a, b) {\r\n        if (a.scores.negative > b.scores.negative) {\r\n            return -1;\r\n        } \r\n        if (a.scores.negative < b.scores.negative) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    onTextAreaChange = async editorState => {\r\n        this.setState({editorState})\r\n        const text = editorState.getCurrentContent().getPlainText();\r\n        if(text.endsWith('.') || text.endsWith('!') || text.endsWith('?')) {\r\n            const response = await backend.post('/finalScore', {\r\n                content: text\r\n            });\r\n            const data = response.data.sentences;\r\n            var compositeData = [];\r\n            var topicData = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let color = 'none';\r\n                let positive = [];\r\n                let negative = [];\r\n                let posTopics = [];\r\n                let negTopics = [];\r\n                for (let x = 0; x < data[i].aspects.length; x++) {\r\n                    if (data[i].aspects[x].sentiment === 'positive') {\r\n                        positive.push(data[i].aspects[x].text);\r\n                        let opinion = parseInt(data[i].aspects[x].relations[0].ref.split('/').slice(-1)[0]);\r\n                        posTopics.push(data[i].aspects[x].text + ' - ' + data[i].opinions[opinion].text)\r\n                    } else if (data[i].aspects[x].sentiment === 'negative') {\r\n                        negative.push(data[i].aspects[x].text);\r\n                        let opinion = parseInt(data[i].aspects[x].relations[0].ref.split('/').slice(-1)[0]);\r\n                        negTopics.push(data[i].aspects[x].text + ' - ' + data[i].opinions[opinion].text)\r\n                    }\r\n                }\r\n\r\n                var posSuggested = data[i].text;\r\n                var negSuggested = data[i].text;\r\n                for (let i = 0; posTopics.length > i; i++) {\r\n                    const response = await axios.get('https://api.datamuse.com/words?rel_ant=' + posTopics[i].split(' - ')[1])\r\n                    if (response.data.length > 0) {\r\n                        posSuggested = posSuggested.replace(posTopics[i].split(' - ')[1], response.data[0].word);\r\n                    }\r\n                }\r\n                for (let i = 0; negTopics.length > i; i++) {\r\n                    const response = await axios.get('https://api.datamuse.com/words?rel_ant=' + negTopics[i].split(' - ')[1])\r\n                    if (response.data.length > 0) {\r\n                        negSuggested = negSuggested.replace(negTopics[i].split(' - ')[1], response.data[0].word);\r\n                    }\r\n                }\r\n\r\n                topicData.push({ sentence: data[i], posTopics, negTopics, posSuggested: posSuggested, negSuggested })\r\n\r\n                if (data[i].sentiment === 'positive') {\r\n                    color = 'rgb(33, 186, 69, .5)';\r\n                } else if (data[i].sentiment === 'negative') {\r\n                    color = 'rgb(215, 40, 40, .5)';\r\n                } else if (data[i].sentiment === 'mixed') {\r\n                    color = 'yellow';\r\n                }\r\n                let regex = new RegExp(data[i].text, 'g');\r\n                compositeData.push({\r\n                    strategy: (contentBlock, callback) => {\r\n                        this.findWithRegex(regex, contentBlock, callback);\r\n                    },\r\n                    component: (props) => {\r\n                        return (\r\n                            <Popup trigger={<span {...props} style={{ backgroundColor: color }}>{props.children}</span>}>\r\n                                {(positive.length > 0 || negative.length > 0) &&(\r\n                                    <div className='topics'>\r\n                                        {positive.length > 0 && (\r\n                                            <React.Fragment>\r\n                                                <p><b>Positive Topics: </b>{positive.join(', ')}</p>\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                        {negative.length > 0 && (\r\n                                            <React.Fragment>\r\n                                                <p><b>Negative Topics: </b>{negative.join(', ')}</p>\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                                <b>Confidence Scores:</b><br />\r\n                                {data[i].scores.positive != 0 && (\r\n                                    <p><b>Positive: </b>{Math.round(data[i].scores.positive * 100)}%</p>\r\n                                )}\r\n                                {data[i].scores.neutral != 0 && (\r\n                                    <p><b>Neutral: </b>{Math.round(data[i].scores.neutral * 100)}%</p>\r\n                                )}\r\n                                {data[i].scores.negative != 0 && (\r\n                                    <p><b>Negative: </b>{Math.round(data[i].scores.negative * 100)}%</p>\r\n                                )}\r\n                            </Popup>\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n\r\n            const holisticResponse = await backend.post('/score', {\r\n                content: text\r\n            });\r\n            var hashtags;\r\n            if (holisticResponse.data.top_tags.length <= 0 ) {\r\n                hashtags = ['Start writing! Key emotions will appear here.'];\r\n            } else {\r\n                hashtags = holisticResponse.data.top_tags;\r\n            }\r\n            let spanHighlight = new CompositeDecorator(compositeData);\r\n            this.setState({editorState: EditorState.set(this.state.editorState, {decorator: spanHighlight}), hashtags, topicData });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"ui text container\">\r\n                <h1 className=\"title ui center aligned icon huge header\">\r\n                    Em<span style={{ color: '#21ba45' }}>o</span>te<span style={{ color: '#db2828' }}>.</span>\r\n                </h1>\r\n\r\n                <Editor className=\"text-area\" editorState={this.state.editorState} onChange={this.onTextAreaChange} />\r\n                <Hashtags hashtags={this.state.hashtags} />\r\n                <Suggestion data={this.state.topicData} />\r\n                <h2 className=\"color-header ui center aligned icon header\">\r\n                    What do the colors mean?\r\n                </h2>\r\n                <Meaning />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}